/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.hadoop.hive.ql.log;

import java.util.Optional;

/**
 * A logger interface for logging when actions with Hive occur and to time their
 * duration.
 */
public interface PerfTimerLogger {

  /**
   * An action has started. The start time provided represents nanoseconds since
   * some fixed but arbitrary origin time (perhaps in the future, so values may
   * be negative). The start time provided to this method is meaningful only
   * when compared to the end time later provided which is generated by the same
   * instance of a Java virtual machine as the start time.
   *
   * @param sessionId Session ID generating this action (optional)
   * @param clazz The class the logging is reference to
   * @param action The action within the class to measure
   * @param extra An arbitrary extra information to include in the log message
   * @param startTime The time the action started.
   */
  void start(Optional<String> sessionId, Class<?> clazz, String action, Optional<String> extra,
      long startTime);

  /**
   * An action has stopped. The start time provided represents nanoseconds since
   * some fixed but arbitrary origin time (perhaps in the future, so values may
   * be negative). The start time provided to this method is meaningful only
   * when compared to the end time which is generated by the same instance of a
   * Java virtual machine as the start time.
   *
   * @param clazz The class the logging is reference to
   * @param action The action within the class to measure
   * @param extra An arbitrary extra information to include in the log message
   * @param stopTime The time the action started.
   */
  void stop(Class<?> clazz, String action, Optional<String> extra,
      long stopTime);

}
